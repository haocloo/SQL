-- Class Activity 1
-- THE SCHOOL TABLE SHOWS 3 SCHOOLS LOCATED IN GELUGOR. THERE ARE 3 OTHER
-- TABLES (SCHOOL_A, SCHOOL_B AND SCHOOL_C) SHOWING THE NAMES OF
-- STUDENTS IN THE RESPECTIVE SCHOOLS. WRITE AN SQL STATEMENT TO SHOW THE
-- SCHOOL ID, STUDENT ID AND STUDENT NAME FROM ALL 3 SCHOOLS IN GELUGOR IN A
-- SINGLE TABLE. SHOW ALSO THE DUPLICATE RECORDS.

SELECT 'A' AS schoolID, studID, studName FROM SCHOOL_A
UNION ALL
SELECT 'B' AS schoolID, studID, studName FROM SCHOOL_B
UNION ALL
SELECT 'C' AS schoolID, studID, studName FROM SCHOOL_C

 -- Class Activity 2
 -- CREATE A ROW-LEVEL AFTER TRIGGER (TRG_LINE_PROD) THAT AUTOMATICALLY REDUCES
 -- THE QUANTITY ON HAND (P_QOH) OF A PRODUCT WITH EVERY SALE.
 -- PRODUCT(P_CODE, P_DESCRIPT, P_INDATE, P_QOH, P_MIN, P_PRICE, P_DISCOUNT, V_CODE)
 -- LINE(INV_NUMBER, LINE_NUMBER, P_CODE, LINE_UNITS, LINE_PRICE)
    CREATE
    OR REPLACE TRIGGER TRG_LINE_PROD AFTER INSERT
    ON LINE FOR EACH ROW BEGIN UPDATE PRODUCT SET P_QOH = P_QOH - :NEW.LINE_UNITS
WHERE
    P_CODE = :NEW.P_CODE;

END;

/

-- Class Activity 3
-- CREATE A STORED PROCEDURE (PRC_USER_UPDATE) THAT ACCEPTS 2 IN PARAMETERS (P_USERID AND
-- P_USERNAME WITH VARCHAR(20) DATA TYPE RESPECTIVELY) AND UPDATE THE USERNAME FIELD IN THE
-- COM_USER TABLE BASED ON THE PROVIDED USERID. COM_USER TABLE HAS USERNAME AND USERID COLUMNS.

CREATE OR REPLACE PROCEDURE PRC_USER_UPDATE(
    P_USERID IN VARCHAR2,
    P_USERNAME IN VARCHAR2
) AS
BEGIN
    UPDATE COM_USER
    SET
        USERNAME = P_USERNAME
    WHERE
        USERID = P_USERID;
END PRC_USER_UPDATE;
/

-- Class Activity 4
-- EMPLOYEE (empID, firstName, lastName, salary, deptID)
-- Write an SQL statement to find employees with salary above the average salary of 
-- the department to which an employee belongs. Show the last name, salary and department ID

SELECT lastName, salary, deptID
FROM EMPLOYEE
WHERE salary > (
  SELECT AVG(salary)
  FROM EMPLOYEE as E2
  WHERE E2.deptID = EMPLOYEE.deptID
)
