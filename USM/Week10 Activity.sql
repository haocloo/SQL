-- ðŸ¤” Activity #1
CREATE TABLE LINE (
    INV_NUMBER NUMBER(5, 0) NOT NULL,
    LINE_NUMBER NUMBER(2, 0) NOT NULL,
    P_CODE VARCHAR(10) NOT NULL,
    LINE_UNITS NUMBER(9, 2) NOT NULL,
    LINE_PRICE NUMBER(9, 2) NOT NULL
);

-- ðŸ¤” Activity #2
-- CREATE TABLE LINE
-- â–ª ENFORCE REFERENTIAL INTEGRITY TO ENSURE THAT THE DELETION OF A ROW IN THE INVOICE ENTITY AUTOMATICALLY TRIGGERS THE DELETION OF CORRESPONDING ROWS IN THE LINE ENTITY.

-- DROP TABLE LINE;

-- CREATE TABLE INVOICE(
--     INV_NUMBER NUMBER(5, 0) NOT NULL,
--     CONSTRAINT INVOICE_PK PRIMARY KEY (INV_NUMBER)
-- );

-- CREATE TABLE PRODUCT(
--     P_CODE VARCHAR(10) NOT NULL,
--     CONSTRAINT PRODUCT_PK PRIMARY KEY (P_CODE)
-- );

CREATE TABLE LINE(
    INV_NUMBER NUMBER(5, 0) NOT NULL,
    LINE_NUMBER NUMBER(2, 0) NOT NULL,
    P_CODE VARCHAR(10) NOT NULL,
 -- â–ª ASSIGN LINE_UNITS AND LINE_PRICE DEFAULT VALUES OF 0.00.
    LINE_UNITS NUMBER(9, 2) DEFAULT 0.00 NOT NULL,
    LINE_PRICE NUMBER(9, 2) DEFAULT 0.00 NOT NULL,
 -- â–ª CREATE A COMPOSITE PRIMARY KEY (INV_NUMBER, LINE_NUMBER).
    CONSTRAINT LINE_PK1 PRIMARY KEY (INV_NUMBER, LINE_NUMBER),
 -- â–ª CREATE A UNIQUE CONSTRAINT NAMED LINE_UI1 ON INV_NUMBER AND P_CODE.
    CONSTRAINT LINE_UT1 UNIQUE (INV_NUMBER, P_CODE),
 -- â–ª SET INV_NUMBER AS THE FOREIGN KEY REFERENCING INVOICE.
    CONSTRAINT LINE_FK1 FOREIGN KEY (INV_NUMBER) REFERENCES INVOICE(INV_NUMBER) ON DELETE CASCADE,
 -- â–ª SET P_CODE AS THE FOREIGN KEY REFERENCING PRODUCT.
    CONSTRAINT LINE_FK2 FOREIGN KEY (P_CODE) REFERENCES PRODUCT(P_CODE) ON DELETE CASCADE
);

-- ðŸ¤” Activity #3
-- UPDATE P_SALECODE COLUMN IN PRODUCT FOLLOWING THE CONDITIONS.
-- P_INDATE                             P_SALECODE
-- BEFORE 25 DEC 2013                         2
-- BETWEEN 16 JAN 2014 AND 10 FEB 2014        1

-- DROP TABLE LINE;
-- DROP TABLE INVOICE;
-- DROP TABLE PRODUCT;

-- CREATE TABLE PRODUCT (
--     P_CODE VARCHAR(8) NOT NULL,
--     P_DESCRIPT VARCHAR2(100) NOT NULL,
--     P_INDATE DATE NOT NULL,
--     P_QOH NUMBER(9) NOT NULL,
--     P_MIN NUMBER(9) NOT NULL,
--     P_PRICE NUMBER(9, 2) NOT NULL,
--     P_DISCOUNT NUMBER(4, 2) NOT NULL,
--     V_CODE NUMBER(5) NOT NULL
-- );

-- INSERT INTO PRODUCT VALUES ('11QER/31', 'Power painter, 15 pai., 3-nozzle', '03-NOV-13', 8, 5, 109.99, 0, 25595);
-- INSERT INTO PRODUCT VALUES ('13-Q2/P2', '7.25-in. pwr. saw blade', '13-DEC-13', 32, 15, 14.99, 0.05, 21344);

-- ALTER TABLE PRODUCT ADD (P_SALECODE CHAR(1));

UPDATE PRODUCT
SET
    P_SALECODE = 2
WHERE
    P_INDATE < '25-DEC-13';

UPDATE PRODUCT
SET
    P_SALECODE = 1
WHERE
    P_INDATE BETWEEN '16-JAN-14' AND '10-FEB-14';

-- ðŸ¤” Activity #4

COMMIT;
-- 1) Add into inventory 20 units of product 2232/QWE

UPDATE PRODUCT
SET
    P_QOH = P_QOH + 20
WHERE
    P_CODE = '2232/QWE';

-- 2) Add 10 percent to the price for all PRODUCTS THAT HAVE CURRENT PRICES BELOW $50
UPDATE PRODUCT
SET
    P_PRICE = P_PRICE * 1.1
WHERE
    P_PRICE < 50;

-- 3) Undo the changes made in the last 2 STATEMENTS
ROLLBACK;

-- ðŸ¤” Activity #5
-- Copy data from P_CODE, P_DESCRIPT, P_PRICE AND V_CODE
-- FROM THE PRODUCT TABLE TO A NEW TABLE NAMED PART
CREATE TABLE PART AS
    SELECT
        P_CODE,
        P_DESCRIPT,
        P_PRICE,
        V_CODE
    FROM
        PRODUCT;

-- ðŸ¤” Activity #6
-- SUPPOSE TABLE PART IS CREATED BASED ON ANOTHER TABLE (CONSTRAINTS ARE NOT PORTED INTO THE NEW PART TABLE),
-- DEFINE THE PRIMARY KEY AND FOREIGN KEY FOR THE NEW PART TABLE

-- so that can create foreign key due to referential integrity
-- DROP TABLE VENDOR;
-- CREATE TABLE VENDOR AS
--     SELECT
--         *
--     FROM
--         PART;
-- ALTER TABLE VENDOR ADD CONSTRAINT VENDOR_PK PRIMARY KEY (V_CODE);
ALTER TABLE PART ADD CONSTRAINT PART_PK PRIMARY KEY (P_CODE);

ALTER TABLE PART ADD CONSTRAINT PART_FK1 FOREIGN KEY (V_CODE) REFERENCES VENDOR(V_CODE);