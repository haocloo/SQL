-- PART 1: FIRST, RUN THE CREATE TABLE STATEMENTS IN TUT_03_CREATE_TABLES.SQL.
-- FOUR TABLES WILL BE CREATED (INDUSTRY, STOCKCOMPANY, STOCKYEND AND STOCKCLOSING). WRITE THE SQL STATEMENTS FOR THE QUESTIONS BELOW. INCLUDE A SCREENSHOT OF THE OUTPUT (TABLE) FOR EACH QUESTION.

-- 1a) ALTER INDUSTRY TABLE TO INCLUDE CHANGE DATE ATTRIBUTE (INDCHANGEDATE).
ALTER TABLE INDUSTRY ADD INDCHANGEDATE DATE;

-- 1b) ALTER INDUSTRY TABLE TO INCLUDE CHANGED BY ATTRIBUTE (INDCHANGEDBY).
-- SET THE DATA TYPE OF INDCHANGEDBY TO VARCHAR(30).
ALTER TABLE INDUSTRY ADD INDCHANGEDBY VARCHAR(30);

-- 1c) ALTER INDUSTRY TABLE TO INCLUDE STATUS ATTRIBUTE (INDSTATUS).
-- SET THE DATA TYPE OF INDSTATUS TO CHAR.
ALTER TABLE INDUSTRY ADD INDSTATUS CHAR;

-- 1d) ADD A CHECK CONSTRAINT FOR THE STATUS (INDSTATUS) TO BE ‘A’, ‘R’, ‘O’, OR NULL.
ALTER TABLE INDUSTRY ADD CONSTRAINT INDSTATUS CHECK (INDSTATUS IN ('A', 'R', 'O')
OR INDSTATUS IS NULL);

-- 1e) ADD THE CURRENT DATE AS A DEFAULT FOR THE CHANGE DATE.
-- ALTER TABLE INDUSTRY DROP CONSTRAINT INDSTATUS;
ALTER TABLE INDUSTRY MODIFY INDCHANGEDATE DATE DEFAULT SYSDATE;

-- 1f) ADD THE CURRENT USER AS THE DEFAULT FOR THE CHANGED BY ATTRIBUTE.
ALTER TABLE INDUSTRY MODIFY INDCHANGEDBY VARCHAR(30) DEFAULT USER;

-- 2a) ALTER STOCKYEND TABLE TO INCLUDE STOCKYENDDATE ATTRIBUTE. SET THE DATA TYPE TO DATE.
ALTER TABLE STOCKYEND ADD STOCKYENDDATE DATE;

-- 2b) ALTER THE STOCKYEND TABLE TO INCLUDE STOCKYENDHIGHPRICE ATTRIBUTE. SET THE DATA TYPE TO NUMBER(9, 2).
ALTER TABLE STOCKYEND ADD STOCKYENDHIGHPRICE NUMBER(9, 2);

-- 2c) ALTER THE STOCKYEND TABLE TO INCLUDE STOCKYENDLOWPRICE ATTRIBUTE. SET THE DATA TYPE TO NUMBER(9, 2).
ALTER TABLE STOCKYEND ADD STOCKYENDLOWPRICE NUMBER(9, 2);

-- 2d) ALTER THE STOCKYEND TABLE TO INCLUDE STOCKYENDDIVIDEND ATTRIBUTE. SET THE DATA TYPE TO NUMBER(9, 2).
ALTER TABLE STOCKYEND ADD STOCKYENDDIVIDEND NUMBER(9, 2);

-- 2e) ADD A CHECK CONSTRAINT FOR THE STOCKYENDHIGHPRICE, STOCKYENDLOWPRICE, AND STOCKYENDDIVIDEND MUST HAVE VALUES >= 0.
ALTER TABLE STOCKYEND ADD CONSTRAINT STOCKYEND_CK CHECK (STOCKYENDHIGHPRICE >= 0
AND STOCKYENDLOWPRICE >= 0
AND STOCKYENDDIVIDEND >= 0);

-- 3) Alter the primary key for the StockYEnd table to include stockYEndTickerSymbol and stockYEndDate as a composite primary key.
ALTER TABLE STOCKYEND ADD CONSTRAINT STOCKYEND_PK PRIMARY KEY (STOCKYENDTICKERSYMBOL, STOCKYENDDATE);

-- Part 2

-- 4) Insert values into StockYEnd table from the StockClosing table. Include the attributes scTickerSymbol, scClosingDate, scHighPrice and scLowPrice and only rows with closing date equals to 31/12/2008 or 31/12/2009 from the StockClosing table.
INSERT INTO STOCKYEND (
    STOCKYENDTICKERSYMBOL,
    STOCKYENDDATE,
    STOCKYENDHIGHPRICE,
    STOCKYENDLOWPRICE
)
    SELECT
        SCTICKERSYMBOL,
        SCCLOSINGDATE,
        SCHIGHPRICE,
        SCLOWPRICE
    FROM
        STOCKCLOSING
    WHERE
        ( SCCLOSINGDATE = '31-DEC-2008'
        OR SCCLOSINGDATE = '31-DEC-2009' );

-- 5) Select all attributes from StockYEnd table including stock company name and stock year end date, and sort in highest to lowest year and highest to lowest year end high price.
-- (note : Result will be sorted by date first then symbol)
SELECT
    *
FROM
    STOCKYEND
    INNER JOIN STOCKCOMPANY
    ON STOCKYEND.STOCKYENDTICKERSYMBOL = STOCKCOMPANY.SCPTICKERSYMBOL
ORDER BY
    STOCKYENDDATE DESC,
    STOCKYENDTICKERSYMBOL DESC;

-- 6) Find all stock ticker symbols for stocks that have a stock closing in the StockClosing table with the most recent closing date.
SELECT
    SCTICKERSYMBOL
FROM
    STOCKCLOSING
WHERE
    SCCLOSINGDATE = (
        SELECT
            MAX(SCCLOSINGDATE)
        FROM
            STOCKCLOSING
    );

-- 7) List the maximum, minimum and average closing prices for the “Retailing: General" industry beginning of 1991 through the end of 2000.
SELECT
    MAX(SCCLOSEPRICE),
    MIN(SCCLOSEPRICE),
    AVG(SCCLOSEPRICE)
FROM
    STOCKCLOSING,
    STOCKCOMPANY SCP
WHERE
    SCTICKERSYMBOL = SCP.SCPTICKERSYMBOL
    AND SCP.SCPINDUSTRYID = 'RG'
    AND SCCLOSINGDATE BETWEEN '01-JAN-1991' AND '31-DEC-2000';

-- 8) List all the stocks (ticker symbol, closing date, close price and volume) that have a stock closing volume 20 times above the average closing volume
SELECT
    *
FROM
    STOCKCLOSING
WHERE
    SCVOLUME > (
        SELECT
            AVG(SCVOLUME) * 20
        FROM
            STOCKCLOSING
    );